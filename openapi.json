{
  "openapi": "3.0.1",
  "info": {
    "title": "API Documentation",
    "description": "API endpoints for User, Invoice, Subscription, and Payments",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/auth/google": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google Auth API",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google Auth API",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/success": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google Auth API",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/failed": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Google Auth API",
        "responses": {
          "401": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register/customer":{
      "post": {
        "tags": [
          "Registration"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "description": "User object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "description": "User object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get all invoices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create a new invoice",
        "requestBody": {
          "description": "Invoice object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "invoice"
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get an invoice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update an invoice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Updated invoice object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "invoice"
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete an invoice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get all subscriptions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Create a new subscription",
        "requestBody": {
          "description": "Subscription object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "subscription"
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Get a subscription by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscription"
        ],
        "summary": "Update a subscription by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Updated subscription object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "subscription"
      },
      "delete": {
        "tags": [
          "Subscription"
        ],
        "summary": "Delete a subscription by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get all payments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Create a new payment",
        "requestBody": {
          "description": "Payment object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payment"
      }
    },
    "/payments/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get a payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Payment"
        ],
        "summary": "Update a payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Updated payment object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payment"
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete a payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    },
    "/invites": {
      "get": {
        "tags": [
          "Invite"
        ],
        "summary": "Get all invites",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invite"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invite"
        ],
        "summary": "Create a new invite",
        "requestBody": {
          "description": "Invite object that needs to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/invites/{id}": {
      "get": {
        "tags": [
          "Invite"
        ],
        "summary": "Get an invite by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the invite",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invite"
        ],
        "summary": "Update an invite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the invite",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Invite object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invite"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Invite"
        ],
        "summary": "Delete an invite",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the invite",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    },
    "/invites/verify/{id}": {
      "get": {
        "tags": [
          "Invite"
        ],
        "summary": "Email ID verification api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "invite id",
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GenericResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/photos": {
      "get": {
        "tags": [
          "Photo"
        ],
        "summary": "Get all photos",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page Number starting from 1. Default 1",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items. Default 50.",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Photo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Photo"
        ],
        "summary": "Create a new photo",
        "requestBody": {
          "description": "Photo object that needs to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Photo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Photo"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/photos/{id}": {
      "get": {
        "tags": [
          "Photo"
        ],
        "summary": "Get a photo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the photo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Photo"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Photo"
        ],
        "summary": "Update a photo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the photo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "requestBody": {
          "description": "Photo object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Photo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Photo"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Photo"
        ],
        "summary": "Delete a photo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the photo",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuidv4"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "google_id": {
            "type": "string"
          },
          "apple_id": {
            "type": "string"
          },
          "microsoft_id": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "ADMIN",
              "SUPERADMIN",
              "EXECUTIVEBOARDMEMBER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INVITED",
              "DISABLED",
              "INACTIVE"
            ]
          }
        }
      },"RegisterUser": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
         
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "user_id": {
            "type": "string"
          },
          "charges": {
            "type": "number",
            "format": "double"
          },
          "discounts": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "SENT",
              "VIEWED",
              "PAID"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "user_id": {
            "type": "string"
          },
          "plan_name": {
            "type": "string",
            "enum": [
              "STANDARD",
              "FREE",
              "FREEMIUM",
              "LIMITED"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "invoice_id": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETE",
              "INCOMPLETE"
            ]
          }
        }
      },
      "Photo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "user_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "album_id": {
            "type": "string"
          },
          "captured_by": {
            "type": "string"
          },
          "captured_on": {
            "type": "string",
            "format": "date-time"
          },
          "captured_at": {
            "type": "string"
          },
          "resolution": {
            "type": "string"
          },
          "other_meta_data": {
            "type": "string"
          }
        }
      },
      "Invite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuidv4"
          },
          "user_id": {
            "type": "string"
          },
          "email_id": {
            "type": "string",
            "format": "email"
          },
          "description": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "CUSTOMER",
              "ADMIN",
              "SUPERADMIN",
              "EXECUTIVEBOARDMEMBER"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "JOINREQUEST",
              "VERIFICATION"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "SENT",
              "VERIFIED",
              "EXPIRED"
            ]
          }
        }
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "succeded": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "GenericErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "succeded": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}